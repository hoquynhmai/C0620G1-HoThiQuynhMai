  1 . Tạo server ảo : npm i -g json-server
        Tại thư mục server ngang cấp app, tạo database.json

    2 . Tạo Service : ng g s name
        Trong app : import HttpClientModule
        Trong service :
            public API: string = path;

            constructor(
            public http: HttpClient
            ) { }

        getAll(): Observable<any> {
            return this.http.get(this.API) }

        createNewService(employee): Observable<any> {
            return this.http.post(this.API, employee) }

    3 . Trong employee-list.component.ts :
            public listName;

            constructor(
            public service: Service
            ) { }

            ngOnInit() {
                this.service.getAll().subscribe(data => {
                this.listName = data })
            }

    4 . Hiển thị dùng *ngFor = " let element of listName "

    5 . Search : npm i ng2-search-filter --save
            import Ng2SearchPipeModule, FormsModule trong @NgModule của app-routing.module.ts
            Thêm [(NgModel)] = "term" vào ô input
            Thêm |filter: term vào sau *ngFor

    6 . Phân trang : Pagination
            npm i ngx-pagination --save
            import NgxPaginationModule
            Thêm |paginate: {itemsPerPage: 5, currentPage: p} sau |filter
            Dưới Table thêm <pagination-controls (pageChange) = " p = $event"></pagination-controls>

    7 . Create : ng g c name --module=app-routing
            a) Trong list.html :
                <button class="btn btn-success" [routerLink]="['/create-employee']">Add New Employee</button>

            b) Trong app-routing.ts :
                const routes: Routes = [
                    {path: '', component: HomeComponent},

                    {path: 'employee-list', component: EmployeeListComponent},
                    {path: 'create-employee', component: CreateEmployeeComponent},

                    {path: '**', component: PageNotFoundComponent}
                ];

                @NgModule({
                    imports: [RouterModule.forRoot(routes), FormsModule, CommonModule, Ng2SearchPipeModule,
                                NgxPaginationModule, ReactiveFormsModule, MaterialModule],
                    exports: [RouterModule],
                    declarations: [HomeComponent, PageNotFoundComponent, EmployeeListComponent, CreateEmployeeComponent,
                                CustomerListComponent, CreateCustomerComponent]
                })

            c) Trong create.ts :
               public formCreateNewEmployee: FormGroup;

               constructor(
                    public formBuilder: FormBuilder,
                    public employeeService: EmployeeService,
                    public router: Router
               ) { }

               ngOnInit() {
                    this.formCreateNewEmployee = this.formBuilder.group({
                        name: [''],
                        birthDay: [''],
                        idCard: ['']
                    })
               }

               createNewEmployee() {
                    this.employeeService.createNewEmployeeService(this.formCreateNewEmployee.value).subscribe(data => {
                        this.router.navigateByUrl('employee-list').then(_ => { });
                    })
               }

            d) Trong create.html :
                <form [formGroup]="formCreateNewEmployee">
                    <input type="text" class="form-control" formControlName="name" required/>
                        <button class="btn btn-success" (click)="createNewEmployee()">Create New</button>

    8 . Material :  npm install --save hammerjs
                    npm install --save @angular/material @angular/animations @angular/cdk
                    Trong style.css : @import '~@angular/material/prebuilt-themes/indigo-pink.css';
                    Tạo ra material.module.ts :
                        import { NgModule } from '@angular/core';
                        import {MatDialogModule} from "@angular/material/dialog";

                        @NgModule({
                            imports: [
                                MatDialogModule
                            ],
                            exports: [
                                MatDialogModule
                            ],
                            providers: [ MatDatepickerModule ],
                            })

                        export class MaterialModule {}
                    Tạo component con (delete) : ng g c delete-dialog --module=app-routing
                    <input type="button" class="btn btn-sm btn-danger" value="Delete" (click)="openDialogDelete()">
                    Trong employee-list.ts :
                        constructor(
                            public dialog: MatDialog
                        ) { }
                    Trong material.ts :
                        providers: [MatDatepickerModule],
                        entryComponents: [DeleteDialogComponent]